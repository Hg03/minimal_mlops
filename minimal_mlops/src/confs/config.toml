[path]
root="minimal_mlops/src"
data = "data"
models="models"
mlruns="mlruns"

[file]
raw_data = "raw_data.parquet"
raw_training_data="raw_training_data.parquet"
raw_testing_data="raw_testing_data.parquet"
processed_data = "processed_data.parquet"
processed_training_data = "processed_training_data.parquet"
processed_testing_data = "processed_testing_data.parquet"

[load_params]
table="taxi prices"
batch_size=200
offset=0

[split]
test_size=0.2
shuffle=true
random_state=23

[preprocessing_strategies]
numerical_impute="mean"
categorical_impute="most_frequent"

[columns]
to_drop="id"
features=["Trip_Distance_km", "Time_of_Day", "Day_of_Week", "Passenger_Count", "Traffic_Conditions", "Weather", "Base_Fare", "Per_Km_Rate", "Per_Minute_Rate", "Trip_Duration_Minutes"]
target="Trip_Price"
numeric=["Trip_Distance_km", "Passenger_Count", "Base_Fare", "Per_Km_Rate", "Per_Minute_Rate", "Trip_Duration_Minutes"]
categoric=["Time_of_Day", "Day_of_Week", "Traffic_Conditions", "Weather"]
ordinal=["Time_of_Day", "Traffic_Conditions"]
nominal=["Day_of_Week", "Weather"]

[random-forest-regressor]
name="random_forest_model.pkl"
[random-forest-regressor.mlflow]
experiment_name="rfr_experiment"
[random-forest-regressor.hyperparams]
n_estimators=[30, 40, 50]
criterion=["squared_error", "absolute_error"]
max_depth=[10,15,20]

[support-vector-regressor]
name="support_vector_model.pkl"
[support-vector-regressor.mlflow]
experiment_name="svr_experiment"
[support-vector-regressor.hyperparams]
kernel=["linear", "rbf", "sigmoid"]
gamma=["scale", "auto"]
C=[1.0]